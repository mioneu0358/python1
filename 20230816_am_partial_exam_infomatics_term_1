# # Programming assignment 1: Letters and numbers (4 points) ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
# #
# # ONE + TWO - THREE - FOUR + FIVE = 1
# # 위 방정식은 각 단어를 해당하는 숫자나 그 단어의 글자 수로 대체해도 성립합니다. 어떤 방식으로 해도 결과는 1입니다. 또 다른 예는 다음과 같습니다:
# # ONE + TWO - THREE - FOUR + FIVE - SIX + SEVEN + EIGHT + NINE - TEN + ELEVEN + TWELVE - THIRTEEN - FOURTEEN = 5
# # 입력
# # 영어 숫자 이름(대문자)으로 구성된 식으로, 각 이름은 더하기 기호(+) 또는 빼기 기호(-)로 구분됩니다. 더하기와 빼기 기호 전후에는 공백이 있을 수 있습니다.
# # 출력
# # 각 이름을 그 이름의 글자 수로 대체한 후 식을 평가한 결과를 출력합니다.
# #
# # 팁
# # 이 결과를 계산하는 또 다른 방법은 더해야 하는 이름의 각 글자를 +1로, 빼야 하는 이름의 각 글자를 -1로 세는 것입니다.
# #
# # 예제
# # 입력:
# # ONE + TWO - THREE - FOUR + FIVE
# # 출력:
# # 1
# #
# # 입력:
# # ONE+TWO-THREE-FOUR+FIVE-SIX+SEVEN+EIGHT+NINE-TEN+ELEVEN+TWELVE-THIRTEEN-FOURTEEN
# # 출력:
# # 5

#
# exp = input().replace(' ','')
# sign = 1
# result = 0
# for i in exp:
#     if i == '+':
#         sign = 1
#     elif i == '-':
#         sign = -1
#     else:
#         result += sign
# print(result)

# Programming assignment 2: Fifty fifty (5 points)----------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 많은 비정상적이고 모순된 문법 규칙들로 인해, 영어는 많은 복잡한 요소를 가지고 있습니다. 그러나 동일한 현상이 많은 영어 사전에 있는 단어들에게도 적용됩니다.
# 단어 "cabbageheaded"는 알파벳의 첫 절반(a–m)으로만 구성된 가장 긴 단어입니다. 단어 "nontortuous"는 알파벳의 두 번째 절반(n–z)으로만 구성된 가장 긴 단어입니다.

# 우리는 또한 알파벳의 첫 절반과 두 번째 절반의 문자들이 교대로 나오는 단어들을 찾을 수 있습니다. 첫 절반의 알파벳 문자로 시작하는 가장 긴 교대 단어들은 12글자입니다. 예로는 "comparatives"와 "itinerariums"가 있습니다. 두 번째 절반의 알파벳 문자로 시작하는 가장 긴 교대 단어들은 13글자입니다. 예로는 "paranephritis"와 "phraseography"가 있습니다.

# 과제
# 단어는 오직 대문자와 소문자로만 구성됩니다. 당신의 과제는 다음과 같습니다:

# first_position 함수: 단어(str)를 입력으로 받아야 합니다. 이 함수는 단어에서 알파벳 순서상 첫 번째 문자의 위치(int; A=1, B=2, C=3, …, Z=26)를 반환해야 합니다.
# last_position 함수: 단어(str)를 입력으로 받아야 합니다. 이 함수는 단어에서 알파벳 순서상 마지막 문자의 위치(int; A=1, B=2, C=3, …, Z=26)를 반환해야 합니다.
# isfirst 함수: 단어(str)를 입력으로 받아야 합니다. 이 함수는 단어가 알파벳의 첫 절반(a–m)으로만 구성되어 있는지를 나타내는 부울 값(bool)을 반환해야 합니다.
# issecond 함수: 단어(str)를 입력으로 받아야 합니다. 이 함수는 단어가 알파벳의 두 번째 절반(n–z)으로만 구성되어 있는지를 나타내는 부울 값(bool)을 반환해야 합니다.
# isalternate 함수: 단어(str)를 입력으로 받아야 합니다. 이 함수는 단어가 알파벳의 첫 절반(a–m)과 두 번째 절반(n–z)의 문자들이 교대로 나오는지를 나타내는 부울 값(bool)을 반환해야 합니다.
# 이 함수들 중 어떤 것도 대문자와 소문자를 구분해서는 안 됩니다.






