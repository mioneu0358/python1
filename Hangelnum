class Hanglenum:
	def __init__(self,data):
		if type(data) not in [str,int]:
			raise TypeError("정수나 문자열을 입력할 수 있습니다.")
		self.num = data

	def __str__(self):
		if type(self.num) == str:
			return self.num
		if self.num == 0:
			return '영'
		int_num = self.num
		str_num = ""
		# 숫자
		digit_list = ["","일","이","삼","사","오","육","칠","팔",'구']
		# 십 ~ 천 단위
		low_part_list = {1: "", 10: "십", 100: "백", 1000: "천"}
		# 만 ~ 조 단위
		high_part_list = {1:'',10000:'만',100000000:'억',1000000000000:"조"}
		max_part_div = 1000000000000					# 최대 단위
		high_part_div = max_part_div					# 최대 단위부터 시작
		while int_num:
			string = ""							# 천의 단위를 담아줄 문자열 변수
			low_part_div = 1000
			part = int_num // high_part_div		# 받은 숫자값을 천의 단위로 끊어 읽는다.
			# -------- 단위보다 작으면 다음 단위로 넘어간다. --------
			if part == 0:
				int_num %= high_part_div
				high_part_div //= 10000
				continue
			# --------- 천의 단위 계산 ---------
			while part:
				digit = part // low_part_div
				if digit:
					if low_part_div == 1 or digit != 1:
						string += digit_list[digit]			# 숫자 더해주기
					string += low_part_list[low_part_div]	# 단위 더해주기
					part %= low_part_div
				low_part_div //= 10
			# --------- 계산 끝난 천의 단위 str_num에 담아주기 ---------
			str_num += string
			str_num += high_part_list[high_part_div]
			int_num %= high_part_div
			high_part_div //= 10000
		return str_num
num = Hanglenum(123456789)
print(str(num)) # => 일|억|이천삼백사십오|만|육천칠백팔십구
num = Hanglenum(6789123456789)
print(str(num)) # => 육|조|칠천팔백구십일|억|이천삼백사십오|만|육천칠백팔십구
